[project]
name = "simt-emlite"
version = "0.17.4"
description = "API and CLI for communicating with the Emlite meters via EMOP"
authors = [{ name = "Chris Hatch", email = "chris@cepro.energy" }]
requires-python = ">=3.12,<4.0"
readme = "README.pypi.md"
dependencies = [
    "grpcio==1.64.1",
    "tenacity==8.5.0",
    "supabase==2.5.3",
    "crcmod==1.7",
    "structlog==24.4.0",
    "docker==7.1.0",
    "protobuf==5.27.2",
    "python-dotenv==1.0.1",
    "python-socks==2.5.0",
    "rich==13.7.1",
    "dnspython==2.6.1",
    "httpx==0.27.0",
    "argcomplete>=3.4.0",
    # testpypi deps - see additional metadata under 'tool.poetry.dependencies' 
    "emop-frame-protocol==0.2.11",
    "simt-fly-machines==0.1.11",
]

[project.scripts]
test = "simt_emlite:run_tests"
lint = "simt_emlite:run_linter"
emop = "simt_emlite.cli.emop:main"
mediators = "simt_emlite.cli.mediators:main"

[tool.poetry]
# Keeping Poetry-specific configurations
packages = [{ include = "simt_emlite" }]
exclude = ["tests", "*.env"]
# Dependencies that require alternative sources

[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
priority = "explicit"

[tool.poetry.dependencies]
emop-frame-protocol = { source = "testpypi" }
simt-fly-machines = { source = "testpypi" }

[tool.poetry.group.dev.dependencies]
ruff = "0.4.10"
grpcio-tools = "1.64.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-exclude = ["generated"]
